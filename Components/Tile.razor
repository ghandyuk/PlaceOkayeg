<div class="tile" style="background-color: @Colour;"
    @onmouseover="EventUtil.AsNonRenderingEventHandler<MouseEventArgs>(MouseOver)"
    @onmouseout="EventUtil.AsNonRenderingEventHandler<MouseEventArgs>(MouseOut)">
</div>

@code {
    [Parameter] public int X { get; set; }
    [Parameter] public int Y { get; set; }
    [Parameter] public string Colour { get; set; }
    [Parameter] public EventCallback<TileHoverEventArgs> OnMouseOver { get; set; }
    [Parameter] public EventCallback<TileHoverEventArgs> OnMouseOut { get; set; }
    private string coords;

    protected override void OnParametersSet()
    {
        coords = $"({X}, {Y})";
        base.OnParametersSet();
    }

    private void MouseOver(MouseEventArgs args)
    {
        OnMouseOver.InvokeAsync(new(X, Y));
    }

    private void MouseOut(MouseEventArgs args)
    {
        OnMouseOut.InvokeAsync(new(-1, -1));
    }

}
